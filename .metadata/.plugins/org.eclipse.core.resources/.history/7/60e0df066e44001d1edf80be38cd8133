package sec1;
public class ThreadEx2 {
	public static void main(String[] args) {
		Thread th1 = new Thread(new ThreadWithRunnable()); //ThreadWithRunable(인터페이스) 상속 받아 오버라이딩 = 추상화
		th1.run();//쓰레드 시작 
		
		ThreadWithClass th2 = new ThreadWithClass(); //Thread(클래스)로부터 상속 받아 run 메소드 선언
		//반드시 Thread(클래스)로부터 상속받아 ThreadWithClass(클래스)에 run메소드로 기술해야함
		th2.run(); //쓰레드 시작
		
		ThreadWithClass th3 = new ThreadWithClass(); //비선점형
		th3.start();//쓰레드 시작
	
		Thread th4 = new Thread(new ThreadWithRunnable()); //선점형
		th4.start();//쓰레드 시작
		//순서 계속 엎치락 뒷치락함
	}
	
	}

class ThreadWithClass2 extends Thread {
	public void run(){
		for(int i=0;i<5;i++){
		System.out.println(this.getName()); //메소드
		try {
			Thread.sleep(10); //10->0.01초 mmseconde (밀리세컨드)단위
		} catch (InterruptedException e) {
			e.printStackTrace();
		} 
		}
	}
}
class ThreadWithRunnable2 implements Runnable { //runnable은 인터페이스라서 반드시 오버라이딩하여 해당 메서드 구현부로 기술해야함
	@Override
	public void run() {
		for(int i=0;i<5;i++){
			System.out.println(Thread.currentThread().getName()); //현재 실행중인 쓰레드의 이름 출력
			try {
				Thread.sleep(10); //반드시 넣으라는 게 아니라 너무 빨리 실행되어서 딜레이를 넣는 것임 
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}