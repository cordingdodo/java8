package sec1;
//쓰레드(Thread) : 현재 실행 중인 프로그램 또는 데이터나 프로세스를 의미함 실제 컴퓨터에서는 두 개 이상의 쓰레드가 실행 중이게 되는데 이를 멀티 쓰레드라고 부름
//쓰레드를 시작하려면 Thread 클래스 또는 ThreadWithRunnable 인터페이스로부터 상속 받아 run 메소드를 기술하고,run 메소드 안에는 작업할 내용을 기술하며,
//main() 함수에서 해당 객체를 생성 후 객체.run() 하면 쓰레드 시작할 수 있다.
//쓰레드는 다중 쓰레드라고 하더라도 순차적으로 처리되어 하나의 쓰레드가 실행이 완료되면, 다음 쓰레드를 자동으로 시작한다

public class ThreadEx1 {
	public static void main(String[] args) {
		Thread th1 = new Thread(new ThreadWithRunnable()); //ThreadWithRunable(인터페이스) 상속 받아 오버라이딩 = 추상화
		th1.run();//쓰레드 시작 
		
		ThreadWithClass th2 = new ThreadWithClass(); //Thread(클래스)로부터 상속 받아 run 메소드 선언
		//반드시 Thread(클래스)로부터 상속받아 ThreadWithClass(클래스)에 run메소드로 기술해야함
		th2.run(); //쓰레드 시작 
	}
}
class ThreadWithClass extends Thread {
	public void run(){
		for(int i=0;i<5;i++){
		System.out.println(this.getName()); //메소드
		try {
			Thread.sleep(10); //10->0.01초 mmseconde (밀리세컨드)단위
		} catch (InterruptedException e) {
			e.printStackTrace();
		} 
		}
	}
}
class ThreadWithRunnable implements Runnable { //runnable은 인터페이스라서 반드시 오버라이딩하여 해당 메서드 구현부로 기술해야함
	@Override
	public void run() {
		for(int i=0;i<5;i++){
			System.out.println(Thread.currentThread().getName()); //현재 실행중인 쓰레드의 이름 출력
			try {
				Thread.sleep(10); //반드시 넣으라는 게 아니라 너무 빨리 실행되어서 딜레이를 넣는 것임 
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}